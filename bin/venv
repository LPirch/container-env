#!/bin/bash -e

export VENV_BASE_DIR="${VENV_BASE_DIR:-${HOME}/.venv}"
export VENV_USER_MNT="${VENV_USER_MNT:-/user}"
export VENV_HOME_MNT="${VENV_HOME_MNT:-/homedir}"

PROG="$0"
VENV_NAME_ARG="$1"

# echo "VENV_BASE_DIR=\"${VENV_BASE_DIR}\"" >&2
# echo "VENV_NAME_ARG=\"${VENV_NAME_ARG}\"" >&2

if [ -z "${VENV_NAME_ARG}" ]; then
    echo "ERROR: Syntax: ${PROG} shell|program [...]" >&2
    exit 1
fi

shift 1
CMD="$1"


if [ "${VENV_NAME_ARG}" = "${VENV_NAME}" ] ; then
    if [ "${CMD}" = "shell" -o -z "${CMD}" ]; then
        echo "Already in venv ${VENV_NAME}, entering new shell ${SHELL} ..." >&2
        "${SHELL}"
    else
        echo "Note: Already in venv ${VENV_NAME}." >&2
        exec "$@"
    fi
else
    if [ "${CMD}" = "shell" ]; then
        shift 1
    elif [ -z "${CMD}" ]; then
        CMD="shell"
    else
        CMD="exec"
    fi

    VENV_DIR="${VENV_BASE_DIR}/${VENV_NAME_ARG}"

    if [ ! -d "${VENV_DIR}" ]; then
        echo "ERROR: venv directory \"${VENV_DIR}\" doesn't exist." >&2
        exit 1
    fi

    if [ -d "${VENV_DIR}/rootfs" ]; then
        FS_IMG="${VENV_DIR}/rootfs/"
    elif [ -f "${VENV_DIR}/rootfs.sqsh" ]; then
        FS_IMG="${VENV_DIR}/rootfs.sqsh"
    else
        echo "ERROR: No rootfs found in \"${VENV_DIR}\"." >&2
        exit 1
    fi


    VENV_USER_DIR="${VENV_DIR}/user"
    mkdir -p "${VENV_USER_DIR}"

    if [ "${VENV_USER_MNT}" == "none" ] ; then
        VENV_USER_MNT="${VENV_USER_DIR}"
    fi

    EXTRA_OPTS=""
    if (command -v nvidia-smi > /dev/null); then
        # echo "DEBUG: NVIDIA drivers available, adding singularity option \"--nv\"" >&2
        EXTRA_OPTS="${EXTRA_OPTS} --nv"
    fi
    if [ -d "/etc/OpenCL/vendors" ]; then
        # echo "DEBUG: OpenCL available, mounting vendors directory" >&2
        EXTRA_OPTS="${EXTRA_OPTS} -B /etc/OpenCL/vendors"
    fi

    # echo "DEBUG: VENV_DIR=\"${VENV_DIR}\"" >&2
    # echo "DEBUG: VENV_USER_DIR=\"${VENV_USER_DIR}\"" >&2
    # echo "DEBUG: VENV_USER_MNT=\"${VENV_USER_MNT}\"" >&2
    # echo "DEBUG: FS_IMG=\"${FS_IMG}\"" >&2
    # echo "DEBUG: CMD=\"${CMD} $@" >&2

    if (grep -q ' avx2 ' /proc/cpuinfo) ; then
        export OPENBLAS_CORETYPE="Haswell"
    elif (grep -q ' avx ' /proc/cpuinfo) ; then
        export OPENBLAS_CORETYPE="Sandybridge"
    fi

    export SWMOD_HOSTSPEC="linux-x86_64-${VENV_NAME_ARG}"
    export SWMOD_INST_BASE="${VENV_USER_MNT}/.local/sw"
    export SWMOD_MODPATH="${SWMOD_INST_BASE}"

    export JUPYTER_CONFIG_DIR="${VENV_USER_MNT}/.jupyter"
    export JUPYTER_DATA_DIR="${VENV_USER_MNT}/.local/share/jupyter"
    export JULIA_PKGDIR="${VENV_USER_MNT}/.julia"
    export ATOM_HOME="${VENV_USER_MNT}/.atom"

    export VENV_NAME="${VENV_NAME_ARG}"
    export debian_chroot="${VENV_NAME_ARG}"

    export SINGULARITY_SHELL="${SINGULARITY_SHELL:-${SHELL}}"

    if [ "${VENV_USER_MNT}" != "${VENV_USER_DIR}" ] ; then
        exec singularity "${CMD}" ${EXTRA_OPTS} \
            -B "${VENV_USER_DIR}:${VENV_USER_MNT}" \
            -B "${HOME}:${VENV_HOME_MNT}" \
            "${FS_IMG}" "$@"
    else
        exec singularity "${CMD}" ${EXTRA_OPTS} \
            "${FS_IMG}" "$@"
    fi
fi
